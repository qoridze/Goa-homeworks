 #  2) კომენტაის სახით ჩამოწერეთ თუ რა განსხვავებაა set-ებსა და list-ებს შორის. 
#  Set: მოიცავს უნიკალურ ელემენტებს, რაც ნიშნავს, რომ ერთი და იგივე მნიშვნელობა არ შეიძლება იყოს ერთ set-ში რამდენიმე
#   ჯერ. set-ს არ აქვს ინდექსები, ამიტომ თქვენ ვერ შეძლებთ ელემენტებზე პირდაპირ ინდექსით წვდომას. 
#  List-ში შესაძლებელია დუბლიკატების არსებობა, ხოლო set-ში არა. 
#  List-ში ელემენტები ინახება მათი მნიშნელობის მიხედვით, ხოლო set არ ინახავს ელემენტების თანმიმდევრობას. 
#  List საშუალებას იძლევა ინდექსებით წვდომა, ხოლო set ვერ დაიჭერს ელემენტებზე ინდექსით. 
#  4) შექმენით set, რომელშიც შენახული გექნებათ Fast food საკვები პროდუქტები. შემდეგ კი ამოშალეთ ყველა პირვანდელი ელემენტები set-იდან, და მათ ნაცვლად დაამატეთ ჯანსაღი საკვები პროდუქტები.
# 3) შექმენით set სადაც შეინახავთ რიცხვებს, შემდეგ კი ინდექსინგის საშუალებით სცადეთ თითოეული ელემენტის შეცვლა და დააკვირდით შედეგს.  
numbers_set = {10, 20, 30, 40, 50}


try:
    numbers_set[0] = 100
except TypeError as e:
    print("Error:", e)
#  4) შექმენით set, რომელშიც შენახული გექნებათ Fast food საკვები პროდუქტები. შემდეგ კი ამოშალეთ ყველა პირვანდელი ელემენტები set-იდან, და მათ ნაცვლად დაამატეთ ჯანსაღი საკვები პროდუქტები.
fast_food = {"burger", "fries", "pizza", "hot dog"}

fast_food.clear()

healthy_food = {"salad", "fruit", "grilled chicken", "oats"}
fast_food.update(healthy_food)

print(fast_food)

#  5) შექმენით ფუნქცია, რომელიც არგუმენტად იღებს სიას, და აბრუნებს იგივე სიას, მაგრამ დუპლიკატების გარეშე. hint: გააკეთეთ set-ის საშუალებით (output-ში ელემენტების თანმიმდევრობას მნიშვნელობა არ აქვს) 
def remove_duplicates(input_list):
    print (set(input_list))

list1 = [7, 5, 44, 14, 5, 5, 44]
list2 = [89, 90, 56, 45, 90, 78, 90]

print(remove_duplicates(list1))
print(remove_duplicates(list2))

